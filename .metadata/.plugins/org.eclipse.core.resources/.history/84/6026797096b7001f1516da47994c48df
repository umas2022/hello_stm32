#include "flash.h"

/**
 * @brief  初始化Flash（解锁）
 * @param  None
 * @retval HAL状态
 */
HAL_StatusTypeDef Flash_Init(void)
{
    HAL_FLASH_Unlock();
    return HAL_OK;
}

/**
 * @brief  写入一个32位的值到指定的Flash地址
 * @param  Address: 要写入的地址
 * @param  Value: 要写入的值
 * @retval HAL状态
 */
HAL_StatusTypeDef Flash_Write_Value(uint32_t Address, uint32_t Value)
{
    // 定义擦除结构体
    FLASH_EraseInitTypeDef EraseInitStruct;
    uint32_t PageError = 0;

    // 设置擦除参数
    EraseInitStruct.TypeErase = FLASH_TYPEERASE_PAGES;
    EraseInitStruct.PageAddress = Address & (uint32_t)(~(FLASH_PAGE_SIZE - 1));
    EraseInitStruct.NbPages = 1;

    // 执行页擦除
    if (HAL_FLASHEx_Erase(&EraseInitStruct, &PageError) != HAL_OK)
    {
        return HAL_ERROR;
    }

    // 写入数据到Flash
    if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, Address, Value) != HAL_OK)
    {
        return HAL_ERROR;
    }

    // 锁定Flash
    HAL_FLASH_Lock();

    return HAL_OK;
}

/**
 * @brief  从指定的Flash地址读取一个32位的值
 * @param  Address: 要读取的地址
 * @retval 读取到的32位值
 */
uint32_t Flash_Read_Value(uint32_t Address)
{
    return *(__IO uint32_t*)Address;
}
