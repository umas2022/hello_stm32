#include "flash.h"
#include <string.h>

HAL_StatusTypeDef Flash_Init(void)
{
    HAL_FLASH_Unlock();
    return HAL_OK;
}

HAL_StatusTypeDef Flash_Write_String(uint32_t Address, const char *str)
{
    HAL_StatusTypeDef status = HAL_OK;
    size_t length = strlen(str) + 1; // 包含终止符 '\0'

    // 擦除页面
    FLASH_EraseInitTypeDef EraseInitStruct;
    uint32_t PageError = 0;

    EraseInitStruct.TypeErase = FLASH_TYPEERASE_PAGES;
    EraseInitStruct.PageAddress = Address & ~(FLASH_PAGE_SIZE - 1);
    EraseInitStruct.NbPages = 1;

    if (HAL_FLASHEx_Erase(&EraseInitStruct, &PageError) != HAL_OK)
    {
        return HAL_ERROR;
    }

    // 写入字符串到Flash
    for (size_t i = 0; i < length && status == HAL_OK; i++)
    {
        status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, Address + i, str[i]);
    }

    HAL_FLASH_Lock();
    return status;
}

char* Flash_Read_String(uint32_t Address, char *buffer, uint32_t buffer_size)
{
    char *ptr = buffer;
    while (buffer_size-- > 0)
    {
        *ptr++ = *(__IO uint8_t*)Address++;
        if (*(ptr - 1) == '\0') break;
    }
    return buffer;
}
